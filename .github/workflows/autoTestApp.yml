name: AutoTestApp

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  upload-apk:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 检查 APK 文件是否存在
      - name: Check APK existence
        run: |
          if [ ! -f "apk/app-newest.apk" ]; then
            echo "APK 文件不存在！"
            exit 1
          fi

      # 3. 调用 Testin 登录接口并提取 result 值
      - name: 调用 Testin 登录接口
        id: login  # 为该步骤指定 ID，方便后续引用输出
        run: |
          # 动态生成时间戳（当前时间的毫秒数）
          TIMESTAMP=$(date +%s%3N)
          
          # 构造请求体（JSON格式）
          REQUEST_DATA=$(cat <<EOF
          {
            "apikey": "0cc70ef717d01b48ebfef5868a60cdd9",
            "mkey": "usermanager",
            "op": "Login.login",
            "data": {
              "email": "1033081356@qq.com",
              "pwd": "76fa3ac42ea40a439743e032c0463084"
            },
            "action": "user",
            "timestamp": ${TIMESTAMP}
          }
          EOF
          )
          
          # 发送 POST 请求并捕获响应
          RESPONSE=$(curl -s -X POST "https://openapizyy.testin.cn" \
            -H "Content-Type: application/json" \
            -d "$REQUEST_DATA")
          
          # 打印响应内容到日志
          echo "接口返回结果："
          echo "$RESPONSE"

          # 使用 grep 和 awk 提取 data.result 的值
          RESULT=$(echo "$RESPONSE" | grep -o '"result":"[^"]*"' | awk -F':' '{print $2}' | sed 's/"//g')

          # 检查是否成功提取到 result 值
          if [ -z "$RESULT" ]; then
            echo "未提取到有效的 result 值！"
            exit 1
          fi

          echo "提取到的 result 值：$RESULT"

          # 将 result 值设置为输出变量
          echo "::set-output name=result::$RESULT"

      # 4. 使用提取到的 result 值
      - name: 使用提取到的 result 值
        run: |
          echo "从上一步提取到的 result 值是：${{ steps.login.outputs.result }}"
